pipeline {
    agent any

    environment {
        VENV = "venv"
        DOCKER_IMAGE = "your-dockerhub-username/messaging_app:latest"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    credentialsId: 'your-github-cred-id',
                    url: 'https://github.com/<username>/alx-backend-python.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh """
                python3 -m venv ${VENV}
                . ${VENV}/bin/activate
                pip3 install --upgrade pip
                pip3 install -r messaging_app/requirements.txt
                """
            }
        }

        stage('Run Tests') {
            steps {
                sh """
                . ${VENV}/bin/activate
                pytest messaging_app/tests --junitxml=report.xml
                """
            }
            post {
                always {
                    junit 'report.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE} messaging_app/"
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    docker push ${DOCKER_IMAGE}
                    """
                }
            }
        }
    }
}
